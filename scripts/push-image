#!/bin/bash
FIRMWARE_PATH=`pwd`
cd "$( dirname "${BASH_SOURCE[0]}" )/.."
# Read the defaults
source scripts/constants

# Read firmware build configuration
source $FIRMWARE_PATH/.buildpackrc
source $FIRMWARE_PATH/ci/functions.sh

# If git tag is being build, tag the Docker image too
if [ ! -z "$TRAVIS_TAG" ]; then
	TAG=${TRAVIS_TAG#"v"}
	docker tag $DOCKER_IMAGE_NAME:latest $DOCKER_IMAGE_NAME:$TAG
else
	TAG=latest
fi
printf "${GREEN}Tagging main image as${NC} "
printf "${YELLOW}${DOCKER_IMAGE_NAME}:${TAG}${NC}...\n"
docker push $DOCKER_IMAGE_NAME:$TAG
echo

function prebuild-platform {
	PLATFORM=$1

	printf "${GREEN}Prebuilding platform${NC} "
	printf "${YELLOW}${PLATFORM}${NC}...\n"
	# Check if this platform requires different buildpack variation
	VARIATION="BUILDPACK_VARIATION_PLATFORM_${PLATFORM^^}"
	if [ -z ${!VARIATION} ]; then
		BUILDPACK_TAG="${BUILDPACK_VERSION}-${BUILDPACK_VARIATION}"
	else
		BUILDPACK_TAG="${BUILDPACK_VERSION}-${!VARIATION}"
		printf "   ${YELLOW}Custom buildpack variation:${NC} ${BUILDPACK_TAG}\n"
	fi

	# Check if platform requires modules to be prebuild
	MODULAR=n
	for modular_platform in "${MODULAR_PLATFORMS[@]}"
	do
		if [ $PLATFORM == $modular_platform ]; then
			MODULAR=y
		fi
	done

	# Create Dockerfile
        DockerfilePlatform=$BUILD_ROOT/Dockerfile.platform
	echo "FROM ${BUILDPACK_BASE}:${BUILDPACK_TAG}" > $DockerfilePlatform
	cat Dockerfile.template >> $DockerfilePlatform
	cat Dockerfile.platform.template >> $DockerfilePlatform

	printf "${GREEN}Building for${NC} "
	printf "${PLATFORM}${NC}...\n"
	docker build -f $DockerfilePlatform \
		--build-arg PLATFORM=$PLATFORM \
		--build-arg MODULAR=$MODULAR \
		--build-arg FIRMWARE_PATH=`basename $FIRMWARE_PATH` \
		-t $DOCKER_IMAGE_NAME $BUILD_ROOT
	if [ $? -eq 0 ]; then
		printf "${GREEN}Tagging${NC} "
		printf "${YELLOW}${DOCKER_IMAGE_NAME}:${TAG}-${PLATFORM}${NC}...\n"
		docker tag $DOCKER_IMAGE_NAME:latest $DOCKER_IMAGE_NAME:$TAG-$PLATFORM
		docker push $DOCKER_IMAGE_NAME:$TAG-$PLATFORM
	fi
	echo
}

filterPlatform RELEASE_PLATFORM
filterPlatform PRERELEASE_PLATFORM

# Prebuild images for platforms
if [ ! -z "$TRAVIS_TAG" ]; then
	# Prebuild releases
	for platform in "${RELEASE_PLATFORMS[@]}"
	do
		prebuild-platform $platform
	done

	# Prebuild prereleases
	for platform in "${PRERELEASE_PLATFORMS[@]}"
	do
		prebuild-platform $platform
	done
fi
