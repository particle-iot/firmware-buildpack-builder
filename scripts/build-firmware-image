#!/usr/bin/env bash

# Builds the image containing the firmware repo and a second one with test
# dependencies installed

# Exit on errors
set -e

tmpfile=$(mktemp /tmp/dockerfile.XXXXXX)

# Create the base image with bin scripts
echo "FROM ${BUILDPACK_BASE}:${BUILDPACK_VERSION}-${BUILDPACK_VARIATION}" > $tmpfile
echo "COPY bin /bin" >> $tmpfile
docker build -t particle/firmware-buildpack-builder -f $tmpfile .
echo

# Create main Dockerfile
tmpfile=$(mktemp /tmp/dockerfile.XXXXXX)
cat Dockerfile.template > $tmpfile
# Build main image
printf "${GREEN}Building main image based on${NC} "
printf "${YELLOW}${BUILDPACK_BASE}:${BUILDPACK_VERSION}-${BUILDPACK_VARIATION}${NC}...\n"
docker build -t $DOCKER_IMAGE_NAME -f $tmpfile $FIRMWARE_PATH
echo

# Create test Dockerfile
echo "FROM ${DOCKER_IMAGE_NAME}" > $tmpfile
cat Dockerfile.test.template >> $tmpfile
# Build test image
printf "${GREEN}Building test image${NC}...\n"
docker build -f $tmpfile \
	-t $DOCKER_IMAGE_NAME-test .
rm $tmpfile
echo
echo

printf "âœ¨ðŸ’« ${GREEN}Built following images:${NC}\n"
printf "ðŸ‘‰ ${YELLOW}particle/firmware-buildpack-builder${NC} - just buildpack base + bin directory from this repo\n"
printf "ðŸ‘‰ ${YELLOW}$DOCKER_IMAGE_NAME${NC} - above + firmware from \$FIRMWARE_PATH\n"
printf "ðŸ‘‰ ${YELLOW}$DOCKER_IMAGE_NAME-test${NC} - above + gcc used for running unit tests\n"
